# -*- coding: utf-8 -*-
"""IRIS FLOWER CLASSIFICATION

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Wvrcb-f9GqhCFWHc0YcZBIhcgFsPk0QY

**BEGINNER LEVEL TASK**

**NAME : KIRUTHIKA S**
"""



"""**Iris Flowers Classification ML Project**

**LANGUAGE : PYTHON**
"""

# Commented out IPython magic to ensure Python compatibility.
# IMPORTING LIBRARIES
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

dataset = pd.read_csv("/Iris.csv - Iris.csv (3).csv")
dataset

dataset.shape

dataset.head()

dataset.info()

dataset.describe()

# We'll use this to make a scatterplot of the Iris features.
dataset.plot(kind="scatter", x="SepalLengthCm", y="SepalWidthCm")

# A seaborn jointplot shows bivariate scatterplots and univariate histograms in the same figure
sns.jointplot(x="SepalLengthCm", y="SepalWidthCm", data=dataset, size=5)

sns.FacetGrid(dataset, hue="Species", size=5) \
   .map(plt.scatter, "SepalLengthCm", "SepalWidthCm") \
   .add_legend()

ax = sns.boxplot(x="Species", y="PetalLengthCm", data=dataset)
ax = sns.stripplot(x="Species", y="PetalLengthCm", data=dataset, jitter=True, edgecolor="gray")

import seaborn as sns
import matplotlib.pyplot as plt
  
  
sns.countplot(x='Species', data=dataset, )
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
sns.pairplot(dataset.drop(['SepalWidthCm'], axis = 1), 
             hue='Species', height=2)

# importing packages
import seaborn as sns
import matplotlib.pyplot as plt
  
  
sns.heatmap(dataset.corr(method='pearson').drop(
  ['SepalWidthCm'], axis=1).drop(['SepalWidthCm'], axis=0),
            annot = True);
  
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
  
def graph(y):
    sns.boxplot(x="Species", y=y, data=dataset)
  
plt.figure(figsize=(10,10))
      
# Adding the subplot at the specified
# grid position
plt.subplot(221)
graph('SepalLengthCm')
  
plt.subplot(222)
graph('SepalWidthCm')
  
plt.subplot(223)
graph('PetalLengthCm')
  
plt.subplot(224)
graph('PetalWidthCm')
  
plt.show()